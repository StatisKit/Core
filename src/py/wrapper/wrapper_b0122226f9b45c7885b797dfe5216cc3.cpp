#include "_core.h"

class ::statiskit::DistributionEstimation< struct ::statiskit::UnivariateDistribution > & (::std::unique_ptr< ::statiskit::DistributionEstimation< ::statiskit::UnivariateDistribution >, ::std::default_delete< ::statiskit::DistributionEstimation< ::statiskit::UnivariateDistribution > > >::*method_pointer_bde731f6fb4e5c74baae2f5407940034)()const= &::std::unique_ptr< class ::statiskit::DistributionEstimation< struct ::statiskit::UnivariateDistribution >, struct ::std::default_delete< class ::statiskit::DistributionEstimation< struct ::statiskit::UnivariateDistribution > > >::operator*;
::std::unique_ptr< class ::statiskit::DistributionEstimation< struct ::statiskit::UnivariateDistribution >, struct ::std::default_delete< class ::statiskit::DistributionEstimation< struct ::statiskit::UnivariateDistribution > > >::pointer  (::std::unique_ptr< ::statiskit::DistributionEstimation< ::statiskit::UnivariateDistribution >, ::std::default_delete< ::statiskit::DistributionEstimation< ::statiskit::UnivariateDistribution > > >::*method_pointer_478a6fab1f025fbe9dd78a8904e08569)()const= &::std::unique_ptr< class ::statiskit::DistributionEstimation< struct ::statiskit::UnivariateDistribution >, struct ::std::default_delete< class ::statiskit::DistributionEstimation< struct ::statiskit::UnivariateDistribution > > >::get;
::std::unique_ptr< class ::statiskit::DistributionEstimation< struct ::statiskit::UnivariateDistribution >, struct ::std::default_delete< class ::statiskit::DistributionEstimation< struct ::statiskit::UnivariateDistribution > > >::pointer  (::std::unique_ptr< ::statiskit::DistributionEstimation< ::statiskit::UnivariateDistribution >, ::std::default_delete< ::statiskit::DistributionEstimation< ::statiskit::UnivariateDistribution > > >::*method_pointer_2d12c6d85c2f5ce39b7c27c06058ca7d)()= &::std::unique_ptr< class ::statiskit::DistributionEstimation< struct ::statiskit::UnivariateDistribution >, struct ::std::default_delete< class ::statiskit::DistributionEstimation< struct ::statiskit::UnivariateDistribution > > >::release;
void  (::std::unique_ptr< ::statiskit::DistributionEstimation< ::statiskit::UnivariateDistribution >, ::std::default_delete< ::statiskit::DistributionEstimation< ::statiskit::UnivariateDistribution > > >::*method_pointer_4206afbed45b5ce3a4103f1d6c042bd3)(::std::unique_ptr< class ::statiskit::DistributionEstimation< struct ::statiskit::UnivariateDistribution >, struct ::std::default_delete< class ::statiskit::DistributionEstimation< struct ::statiskit::UnivariateDistribution > > >::pointer )= &::std::unique_ptr< class ::statiskit::DistributionEstimation< struct ::statiskit::UnivariateDistribution >, struct ::std::default_delete< class ::statiskit::DistributionEstimation< struct ::statiskit::UnivariateDistribution > > >::reset;
void  (::std::unique_ptr< ::statiskit::DistributionEstimation< ::statiskit::UnivariateDistribution >, ::std::default_delete< ::statiskit::DistributionEstimation< ::statiskit::UnivariateDistribution > > >::*method_pointer_3e9a3dbc9b2b5f538ad4ec5285379e64)(class ::std::unique_ptr< class ::statiskit::DistributionEstimation< struct ::statiskit::UnivariateDistribution >, struct ::std::default_delete< class ::statiskit::DistributionEstimation< struct ::statiskit::UnivariateDistribution > > > &)= &::std::unique_ptr< class ::statiskit::DistributionEstimation< struct ::statiskit::UnivariateDistribution >, struct ::std::default_delete< class ::statiskit::DistributionEstimation< struct ::statiskit::UnivariateDistribution > > >::swap;

namespace autowig {
    void method_decorator_bde731f6fb4e5c74baae2f5407940034(class ::std::unique_ptr< class ::statiskit::DistributionEstimation< struct ::statiskit::UnivariateDistribution >, struct ::std::default_delete< class ::statiskit::DistributionEstimation< struct ::statiskit::UnivariateDistribution > > > const & instance, const class ::statiskit::DistributionEstimation< struct ::statiskit::UnivariateDistribution > & param_out) { instance.operator*() = param_out; }
}

void wrapper_b0122226f9b45c7885b797dfe5216cc3(pybind11::module& module)
{

}