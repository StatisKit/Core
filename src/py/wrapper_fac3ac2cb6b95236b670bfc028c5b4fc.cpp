#include "_core.h"


#if defined(_MSC_VER)
    #if (_MSC_VER == 1900)
namespace boost
{
    template <> class ::std::reverse_iterator< class ::__gnu_cxx::__normal_iterator< char *, class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > > const volatile * get_pointer<class ::std::reverse_iterator< class ::__gnu_cxx::__normal_iterator< char *, class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > > const volatile >(class ::std::reverse_iterator< class ::__gnu_cxx::__normal_iterator< char *, class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > > const volatile *c) { return c; }
}
    #endif
#endif

namespace autowig
{
    void method_decorator_40e8b0d9318257afa2fdf8e36183ba12(class ::std::reverse_iterator< class ::__gnu_cxx::__normal_iterator< char *, class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > > const & instance, const ::std::reverse_iterator< class ::__gnu_cxx::__normal_iterator< char *, class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::reference  param_out)     { instance.operator*() = param_out; }
    void method_decorator_00d8058b45795624b6415da22a0a16a2(class ::std::reverse_iterator< class ::__gnu_cxx::__normal_iterator< char *, class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > > const & instance, ::std::reverse_iterator< class ::__gnu_cxx::__normal_iterator< char *, class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::difference_type  param_in_0, const ::std::reverse_iterator< class ::__gnu_cxx::__normal_iterator< char *, class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::reference  param_out)     { instance.operator[](param_in_0) = param_out; }
}


void wrapper_fac3ac2cb6b95236b670bfc028c5b4fc()
{

    std::string name_a5e4e9231d6351ccb0e06756b389f0af = boost::python::extract< std::string >(boost::python::scope().attr("__name__") + ".std");
    boost::python::object module_a5e4e9231d6351ccb0e06756b389f0af(boost::python::handle<  >(boost::python::borrowed(PyImport_AddModule(name_a5e4e9231d6351ccb0e06756b389f0af.c_str()))));
    boost::python::scope().attr("std") = module_a5e4e9231d6351ccb0e06756b389f0af;
    boost::python::scope scope_a5e4e9231d6351ccb0e06756b389f0af = module_a5e4e9231d6351ccb0e06756b389f0af;
    ::std::reverse_iterator< class ::__gnu_cxx::__normal_iterator< char *, class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::reference  (::std::reverse_iterator< ::__gnu_cxx::__normal_iterator< char *, ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > > > >::*method_pointer_40e8b0d9318257afa2fdf8e36183ba12)() const = &::std::reverse_iterator< class ::__gnu_cxx::__normal_iterator< char *, class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::operator*;
    class ::std::reverse_iterator< class ::__gnu_cxx::__normal_iterator< char *, class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > > & (::std::reverse_iterator< ::__gnu_cxx::__normal_iterator< char *, ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > > > >::*method_pointer_575b672adeee5f0182ec7b9a10b40cc6)() = &::std::reverse_iterator< class ::__gnu_cxx::__normal_iterator< char *, class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::operator++;
    class ::std::reverse_iterator< class ::__gnu_cxx::__normal_iterator< char *, class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >  (::std::reverse_iterator< ::__gnu_cxx::__normal_iterator< char *, ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > > > >::*method_pointer_6e5dc6edc35756f89567040520ce5cca)(int ) = &::std::reverse_iterator< class ::__gnu_cxx::__normal_iterator< char *, class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::operator++;
    class ::std::reverse_iterator< class ::__gnu_cxx::__normal_iterator< char *, class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > > & (::std::reverse_iterator< ::__gnu_cxx::__normal_iterator< char *, ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > > > >::*method_pointer_9ea53a97a4c355babe1a22881dc44651)() = &::std::reverse_iterator< class ::__gnu_cxx::__normal_iterator< char *, class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::operator--;
    class ::std::reverse_iterator< class ::__gnu_cxx::__normal_iterator< char *, class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >  (::std::reverse_iterator< ::__gnu_cxx::__normal_iterator< char *, ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > > > >::*method_pointer_727927a86fd351f5b903a967ee621ba5)(int ) = &::std::reverse_iterator< class ::__gnu_cxx::__normal_iterator< char *, class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::operator--;
    class ::std::reverse_iterator< class ::__gnu_cxx::__normal_iterator< char *, class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >  (::std::reverse_iterator< ::__gnu_cxx::__normal_iterator< char *, ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > > > >::*method_pointer_7d2c066af48c5174acefeb48575de7c7)(::std::reverse_iterator< class ::__gnu_cxx::__normal_iterator< char *, class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::difference_type ) const = &::std::reverse_iterator< class ::__gnu_cxx::__normal_iterator< char *, class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::operator+;
    class ::std::reverse_iterator< class ::__gnu_cxx::__normal_iterator< char *, class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > > & (::std::reverse_iterator< ::__gnu_cxx::__normal_iterator< char *, ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > > > >::*method_pointer_723c0c24f38f50219a25c6e818b7d97a)(::std::reverse_iterator< class ::__gnu_cxx::__normal_iterator< char *, class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::difference_type ) = &::std::reverse_iterator< class ::__gnu_cxx::__normal_iterator< char *, class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::operator+=;
    class ::std::reverse_iterator< class ::__gnu_cxx::__normal_iterator< char *, class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >  (::std::reverse_iterator< ::__gnu_cxx::__normal_iterator< char *, ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > > > >::*method_pointer_c113b16edb7255babd45202c896f4b4d)(::std::reverse_iterator< class ::__gnu_cxx::__normal_iterator< char *, class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::difference_type ) const = &::std::reverse_iterator< class ::__gnu_cxx::__normal_iterator< char *, class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::operator-;
    class ::std::reverse_iterator< class ::__gnu_cxx::__normal_iterator< char *, class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > > & (::std::reverse_iterator< ::__gnu_cxx::__normal_iterator< char *, ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > > > >::*method_pointer_15de85aa2a3250c09d445e82022b85b3)(::std::reverse_iterator< class ::__gnu_cxx::__normal_iterator< char *, class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::difference_type ) = &::std::reverse_iterator< class ::__gnu_cxx::__normal_iterator< char *, class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::operator-=;
    ::std::reverse_iterator< class ::__gnu_cxx::__normal_iterator< char *, class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::reference  (::std::reverse_iterator< ::__gnu_cxx::__normal_iterator< char *, ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > > > >::*method_pointer_00d8058b45795624b6415da22a0a16a2)(::std::reverse_iterator< class ::__gnu_cxx::__normal_iterator< char *, class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::difference_type ) const = &::std::reverse_iterator< class ::__gnu_cxx::__normal_iterator< char *, class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::operator[];
    boost::python::class_< class ::std::reverse_iterator< class ::__gnu_cxx::__normal_iterator< char *, class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >, autowig::Held< class ::std::reverse_iterator< class ::__gnu_cxx::__normal_iterator< char *, class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > > >::Type, boost::python::bases< struct ::std::iterator< struct ::std::random_access_iterator_tag, char, long int, char *, char & > > > class_fac3ac2cb6b95236b670bfc028c5b4fc("_ReverseIterator_fac3ac2cb6b95236b670bfc028c5b4fc", "", boost::python::no_init);
    class_fac3ac2cb6b95236b670bfc028c5b4fc.def("__mul__", method_pointer_40e8b0d9318257afa2fdf8e36183ba12, boost::python::return_value_policy< boost::python::return_by_value >(), "");
    class_fac3ac2cb6b95236b670bfc028c5b4fc.def("__mul__", autowig::method_decorator_40e8b0d9318257afa2fdf8e36183ba12);
    class_fac3ac2cb6b95236b670bfc028c5b4fc.def("__next__", method_pointer_575b672adeee5f0182ec7b9a10b40cc6, boost::python::return_internal_reference<>(), "");
    class_fac3ac2cb6b95236b670bfc028c5b4fc.def("__next__", method_pointer_6e5dc6edc35756f89567040520ce5cca, "");
    class_fac3ac2cb6b95236b670bfc028c5b4fc.def("__prev__", method_pointer_9ea53a97a4c355babe1a22881dc44651, boost::python::return_internal_reference<>(), "");
    class_fac3ac2cb6b95236b670bfc028c5b4fc.def("__prev__", method_pointer_727927a86fd351f5b903a967ee621ba5, "");
    class_fac3ac2cb6b95236b670bfc028c5b4fc.def("__add__", method_pointer_7d2c066af48c5174acefeb48575de7c7, "");
    class_fac3ac2cb6b95236b670bfc028c5b4fc.def("__iadd__", method_pointer_723c0c24f38f50219a25c6e818b7d97a, boost::python::return_internal_reference<>(), "");
    class_fac3ac2cb6b95236b670bfc028c5b4fc.def("__sub__", method_pointer_c113b16edb7255babd45202c896f4b4d, "");
    class_fac3ac2cb6b95236b670bfc028c5b4fc.def("__isub__", method_pointer_15de85aa2a3250c09d445e82022b85b3, boost::python::return_internal_reference<>(), "");
    class_fac3ac2cb6b95236b670bfc028c5b4fc.def("__getitem__", method_pointer_00d8058b45795624b6415da22a0a16a2, boost::python::return_value_policy< boost::python::return_by_value >(), "");
    class_fac3ac2cb6b95236b670bfc028c5b4fc.def("__getitem__", autowig::method_decorator_00d8058b45795624b6415da22a0a16a2);

    if(autowig::Held< class ::std::reverse_iterator< class ::__gnu_cxx::__normal_iterator< char *, class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > > >::is_class)
    {
        boost::python::implicitly_convertible< autowig::Held< class ::std::reverse_iterator< class ::__gnu_cxx::__normal_iterator< char *, class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > > >::Type, autowig::Held< struct ::std::iterator< struct ::std::random_access_iterator_tag, char, long int, char *, char & > >::Type >();
    }

}